doctype html
html(lang='en')
head
  title Messages Page
  style.
    body {
      font-family: sans-serif;
      background-color: #D2B48C;
      margin: 0;
      padding: 20px;
      display: flex;
      flex-direction: column;
      align-items: center;
    }
    .container {
      background-color: #A8785C;
      padding: 20px;
      border-radius: 10px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
      width: 400px;
    }
    .tabs {
      display: flex;
      justify-content: space-around;
      margin-bottom: 20px;
    }
    .tab {
      padding: 10px 20px;
      border: none;
      background-color: #F5E0CA;
      color: #A8785C;
      border-radius: 5px;
      cursor: pointer;
      transition: background-color 0.3s;
    }
    .tab:hover {
      background-color: #E6CCB2;
    }
    .tab.active {
      background-color: #A8785C;
      color: #F5E0CA;
    }
    .headers{
      display: flex;
      justify-content: space-around;
      margin-bottom: 10px;
      color: #F5E0CA;
    }
    .message-list {
      max-height: 200px;
      overflow-y: auto;
      border: 1px solid #A8785C;
      padding: 10px;
      background-color: #F5E0CA;
      border-radius: 5px;
      scrollbar-color:#A8785C #F5E0CA;
    }
    .message-item {
      overflow-y: auto;
      background-color: #F5E0CA;
      display: flex;
      justify-content: space-around;
      border-bottom: 1px solid #A8785C; /* Add a separator line */
    }
    .message-item-body {
      padding: 5px 0;
      color: #A8785C;
      cursor: pointer; /* Make the topics clickable */
      width: 200px;
      overflow: hidden;
    }
    .message-item-timestamp {
      padding: 5px 0;
      color: #A8785C;
      cursor: pointer; /* Make the topics clickable */
    }
    .message-item:last-child {
      border-bottom: none; /* Remove separator from the last item */
    }
    .popup {
      display: none; /* Hidden by default */
      position: fixed; /* Stay in place when scrolling */
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background-color: white;
      border: 1px solid #333;
      padding: 20px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
      z-index: 1000; /* Ensure it's on top */
    }
    .popup-content {
      white-space: pre-wrap; /* Preserve formatting and wrap text */
    }
    .popup-close {
      position: absolute;
      top: 10px;
      right: 10px;
      cursor: pointer;
      font-size: 1.2em;
    }
    .overlay {
      display: none; /* Hidden by default */
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent black */
      z-index: 999; /* Below the popup */
    }

body
  .container
    .tabs
      button.tab.active Topics
      button.tab Consumers
      button.tab Producers
    .headers
      .headerBody Body
      .headerTimestamp Timestamp
    .message-list
      if messages && messages.length > 0
          each message in messages
            .message-item
              .message-item-body()= `${message.content}`
              .message-item-timestamp()= `${message.timestamp}`
      else
        .message-item No messages found.
    
  .popup#messagePopup
    .popup-close &times;
    .popup-content#popupContent
  .overlay#popupOverlay

  script.
    const messageItems = document.querySelectorAll('.message-item-body');
    const popup = document.getElementById('messagePopup');
    const popupContent = document.getElementById('popupContent');
    const popupClose = document.querySelector('.popup-close');
    const overlay = document.getElementById('popupOverlay');

    messageItems.forEach(preview => {
      preview.addEventListener('click', () => {
        const fullContent = preview.textContent;
        popupContent.textContent = fullContent;
        popup.style.display = 'block';
        overlay.style.display = 'block';
      });

      // Optionally add a class to visually indicate truncation
      if (preview.scrollHeight > preview.clientHeight) {
        preview.classList.add('truncated');
      }
    });

    popupClose.addEventListener('click', () => {
      popup.style.display = 'none';
      overlay.style.display = 'none';
    });

    overlay.addEventListener('click', () => {
      popup.style.display = 'none';
      overlay.style.display = 'none';
    });